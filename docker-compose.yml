version: '3.8'

services:
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres/conf/postgres.conf:/etc/postgresql/postgresql.conf
      - ./postgres/conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: always

  airflow-init:
    build:
      context: ./airflow
      dockerfile: airflow.Dockerfile
    entrypoint: /entrypoint.sh
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - AIRFLOW__LOGGING__REMOTE_LOGGING=False
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID}
      - AIRFLOW__METRICS__STATSD_PREFIX=airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/etl:/opt/airflow/etl
      - ./airflow/utils:/opt/airflow/utils
      - ./airflow/data:/opt/airflow/data
      - ./airflow/results:/opt/airflow/results
      - ./airflow/uploaded:/opt/airflow/uploaded
      - ./secrets:/opt/airflow/secrets
      - ./.env:/opt/airflow/.env
    depends_on:
      - postgres
    restart: on-failure

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: airflow.Dockerfile
    command: webserver
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - AIRFLOW__LOGGING__REMOTE_LOGGING=False
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID}
      - AIRFLOW__METRICS__STATSD_PREFIX=airflow
    depends_on:
      - airflow-init
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/etl:/opt/airflow/etl
      - ./airflow/utils:/opt/airflow/utils
      - ./airflow/data:/opt/airflow/data
      - ./airflow/results:/opt/airflow/results
      - ./airflow/uploaded:/opt/airflow/uploaded
      - ./secrets:/opt/airflow/secrets
      - ./.env:/opt/airflow/.env
    restart: always

  airflow-scheduler:
    build:
      context: ./airflow
      dockerfile: airflow.Dockerfile
    command: scheduler
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - AIRFLOW__LOGGING__REMOTE_LOGGING=False
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID}
      - AIRFLOW__METRICS__STATSD_PREFIX=airflow
    depends_on:
      - airflow-init
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/etl:/opt/airflow/etl
      - ./airflow/utils:/opt/airflow/utils
      - ./airflow/data:/opt/airflow/data
      - ./airflow/results:/opt/airflow/results
      - ./airflow/uploaded:/opt/airflow/uploaded
      - ./secrets:/opt/airflow/secrets
      - ./.env:/opt/airflow/.env
    restart: always

  airflow-triggerer:
    build:
      context: ./airflow
      dockerfile: airflow.Dockerfile
    command: triggerer
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID}
      - AIRFLOW__METRICS__STATSD_PREFIX=airflow
    depends_on:
      - airflow-init
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/etl:/opt/airflow/etl
      - ./airflow/utils:/opt/airflow/utils
      - ./airflow/data:/opt/airflow/data
      - ./airflow/results:/opt/airflow/results
      - ./airflow/uploaded:/opt/airflow/uploaded
      - ./secrets:/opt/airflow/secrets
      - ./.env:/opt/airflow/.env
    restart: always

  statsd-exporter:
    image: prom/statsd-exporter
    ports:
      - "9125:9125/udp"
      - "9102:9102"
    restart: always

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always

volumes:
  pg_data:
  grafana_data: